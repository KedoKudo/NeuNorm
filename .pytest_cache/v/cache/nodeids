[
  "tests/NeuNorm/cropping_test.py::TestCropping::test_crop_works",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_crop_works_again_if_force_flag_is_true",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_crop_works_on_df_data",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_crop_works_on_normalized_data",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_crop_works_only_once_without_force_flag",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_cropping_raises_error_when_no_data_and_ob_loaded",
  "tests/NeuNorm/cropping_test.py::TestCropping::test_roi_object_passed_to_crop",
  "tests/NeuNorm/export_test.py::TestExportingPhase1::test_do_nothing_if_nothing_to_export",
  "tests/NeuNorm/export_test.py::TestExportingPhase1::test_error_raised_if_data_type_is_not_valid",
  "tests/NeuNorm/export_test.py::TestExportingPhase1::test_error_raised_if_wrong_folder",
  "tests/NeuNorm/export_test.py::TestExportingPhase2::test_export_create_the_right_file_name",
  "tests/NeuNorm/export_test.py::TestExportingPhase2::test_export_with_manually_loaded_data",
  "tests/NeuNorm/export_test.py::TestExportingPhase2::test_export_works_for_fits",
  "tests/NeuNorm/export_test.py::TestExportingPhase2::test_export_works_for_tif",
  "tests/NeuNorm/export_test.py::TestExportingPhase2::test_export_works_for_tiff_metadata",
  "tests/NeuNorm/loading_test.py::TestLoading::test_all_images_names_retrieved_from_folder",
  "tests/NeuNorm/loading_test.py::TestLoading::test_dict_initialized",
  "tests/NeuNorm/loading_test.py::TestLoading::test_error_raised_when_data_size_do_not_match",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_bad_single_files",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_good_several_single_files",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_good_single_file",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_hdf_raise_error",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_new_data_not_allowed_if_algorithm_already_run",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_tiff_metadata",
  "tests/NeuNorm/loading_test.py::TestLoading::test_loading_unsuported_file_format",
  "tests/NeuNorm/loading_test.py::TestGammaFiltering::test_auto_gamma_filtered_works",
  "tests/NeuNorm/loading_test.py::TestGammaFiltering::test_gamma_filtered_works",
  "tests/NeuNorm/loading_test.py::TestGammaFiltering::test_manuel_gamma_filtered_raises_error_when_array_is_empty",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_initialization_using_array_with_data",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_initialization_using_array_with_data_one_by_one",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_initialization_using_array_with_ob",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_loading_list_of_files",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_nbr_data_files_same_after_normalization_by_list_roi",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_raises_error_if_no_ob_or_sample",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_ran_only_once",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_ran_twice_with_force_flag",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_with_fewer_ob_than_sample_works",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_with_same_ob_and_sample_but_forced_mean_ob",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_works",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_works_if_input_arrays_are_type_int",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_works_with_2_dfs",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_works_with_only_1_df",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_averaging_only_run_the_first_time",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_correction",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_correction_locked_when_run_twice_without_force_flag",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_correction_run_twice_with_force_flag",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_correction_when_no_df",
  "tests/NeuNorm/normalizing_test.py::TestDFCorrection::test_df_fails_when_not_identical_data_shape",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_error_raised_when_data_shape_of_different_type_do_not_match",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_full_normalization_sample_divide_by_ob_works",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_full_normalization_sample_with_several_roi",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_roi_fit_images",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_roi_type_in_normalization",
  "tests/NeuNorm/normalizing_test.py::TestApplyingROI::test_various_data_type_correctly_returned",
  "tests/NeuNorm/roi_test.py::TestRoi::test_error_raised_when_x0_or_y0_not_provided",
  "tests/NeuNorm/roi_test.py::TestRoi::test_error_raised_when_x1_and_width_or_y1_and_height_not_provided",
  "tests/NeuNorm/roi_test.py::TestRoi::test_setting_roi_x0_y0_width_height",
  "tests/NeuNorm/roi_test.py::TestRoi::test_setting_roi_x0_y0_x1_y1",
  "tests/NeuNorm/roi_test.py::TestRoi::test_x_and_y_correctly_sorted",
  "tests/NeuNorm/utilities_test.py::TestUtilites::test_all_images_names_retrieved_from_file",
  "tests/NeuNorm/utilities_test.py::TestUtilites::test_df_averaging",
  "tests/NeuNorm/normalizing_test.py::TestNormalization::test_normalization_works_with_1_roi_given_as_a_list"
]